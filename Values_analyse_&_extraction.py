import matplotlib.pyplot as plt
import numpy as np

vol1 = {
    "Tension_debut": 16.685,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 16.55,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [1000 ,1005 ,1079 ,1100 ,1124 ,1149 ,1151 ,1167 ,1196 ,1232 ,1253 ,1267 ,1279 ,1297 ,1303 ,1302 ,1299 ,1323 ,1323 ,1323 ,1325 ,1325 ,1320 ,1320 ,1318 ,1313 ,1320 ,1323 ,1317 ,1312 ,1303 ,1307 ,1309 ,1301 ,1300 ,1300 ,1300 ,1301 ,1304 ,1354 ,1344 ,1343 ,1342 ,1340 ,1338 ,1287 ,1300 ,1297 ,1296 ,1330 ,1328 ,1324 ,1322 ,1324 ,1324 ,1326 ,1325 ,1325 ,1326 ,1326 ,1326 ,1325 ,1313 ,1320 ,1321 ,1321 ,1322 ,1322 ,1322 ,1321 ,1319 ,1318 ,1318 ,1318 ,1318 ,1318 ,1318 ,1318 ,1318 ,1318 ,1319 ,1318 ,1318 ,1320 ,1324 ,1322 ,1320 ,1318 ,1313 ,1314 ,1314 ,1315 ,1315 ,1314 ,1315 ,1314 ,1314 ,1315 ,1314 ,1314 ,1315 ,1315 ,1315 ,1314 ,1315 ,1316 ,1315 ,1316 ,1316 ,1316 ,1315 ,1316 ,1315 ,1316 ,1315 ,1315 ,1316 ,1316 ,1316 ,1316 ,1315 ,1313 ,1339 ,1300 ,1300 ,1297 ,1290 ,1000]
}

vol2 = {
    "Tension_debut": 16.55,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 16.475,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [999 ,1043 ,1071 ,1134 ,1161 ,1198 ,1198 ,1225 ,1244 ,1246 ,1246 ,1250 ,1278 ,1279 ,1279 ,1279 ,1292 ,1312 ,1323 ,1329 ,1331 ,1329 ,1329 ,1325 ,1323 ,1320 ,1321 ,1316 ,1321 ,1324 ,1327 ,1328 ,1328 ,1328 ,1328 ,1329 ,1327 ,1328 ,1319 ,1324 ,1329 ,1330 ,1325 ,1319 ,1319 ,1316 ,1315 ,1331 ,1340 ,1340 ,1330 ,1317 ,1331 ,1331 ,1326 ,1325 ,1320 ,1320 ,1322 ,1325 ,1327 ,1328 ,1340 ,1329 ,1329 ,1329 ,1334 ,1338 ,1338 ,1340 ,1340 ,1340 ,1339 ,1331 ,1318 ,1325 ,1365 ,1358 ,1357 ,1356 ,1336 ,1297 ,1303 ,1305 ,1305 ,1305 ,1315 ,1359 ,1359 ,1355 ,1352 ,1351 ,1342 ,1334 ,1335 ,1310 ,1313 ,1314 ,1318 ,1320 ,1322 ,1322 ,1352 ,1343 ,1342 ,1342 ,1341 ,1340 ,1340 ,1340 ,1340 ,1340 ,1340 ,1340 ,1339 ,1338 ,1338 ,1338 ,1323 ,1318 ,1321 ,1322 ,1323 ,1324 ,1326 ,1327 ,1327 ,1355 ,1348 ,1342 ,1324 ,1331 ,1337 ,1337 ,1334 ,1334 ,1334 ,1333 ,1328 ,1325 ,1325 ,1325 ,1327 ,1326 ,1327 ,1329 ,1313 ,1314 ,1314 ,1314 ,1314 ,1315 ,1319 ,1319 ,1319 ,1319 ,1320 ,1320 ,1319 ,1291 ,1264 ,1235 ,1000]
}

vol3 = {
    "Tension_debut": 16.475,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 16.375,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [999 ,1072 ,1092 ,1147 ,1162 ,1174 ,1187 ,1187 ,1206 ,1210 ,1229 ,1233 ,1232 ,1256 ,1271 ,1274 ,1276 ,1278 ,1278 ,1289 ,1306 ,1317 ,1314 ,1312 ,1312 ,1312 ,1311 ,1312 ,1312 ,1320 ,1327 ,1318 ,1317 ,1317 ,1317 ,1318 ,1319 ,1321 ,1321 ,1327 ,1337 ,1337 ,1337 ,1336 ,1335 ,1332 ,1330 ,1328 ,1329 ,1328 ,1328 ,1328 ,1328 ,1329 ,1328 ,1328 ,1331 ,1331 ,1332 ,1332 ,1332 ,1331 ,1331 ,1332 ,1331 ,1331 ,1331 ,1331 ,1331 ,1331 ,1331 ,1331 ,1327 ,1328 ,1328 ,1328 ,1334 ,1336 ,1309 ,1312 ,1317 ,1318 ,1319 ,1327 ,1330 ,1322 ,1322 ,1328 ,1328 ,1328 ,1328 ,1331 ,1339 ,1339 ,1332 ,1328 ,1342 ,1359 ,1353 ,1353 ,1354 ,1352 ,1293 ,1294 ,1317 ,1318 ,1329 ,1357 ,1356 ,1356 ,1353 ,1348 ,1317 ,1319 ,1318 ,1320 ,1321 ,1321 ,1323 ,1333 ,1345 ,1332 ,1329 ,1290 ,1319 ,1314 ,1315 ,1321 ,1352 ,1352 ,1353 ,1348 ,1346 ,1346 ,1346 ,1346 ,1346 ,1344 ,1341 ,1314 ,1316 ,1328 ,1328 ,1329 ,1327 ,1327 ,1328 ,1328 ,1328 ,1328 ,1330 ,1328 ,1328 ,1327 ,1328 ,1327 ,1327 ,1327 ,1327 ,1329 ,1328 ,1328 ,1328 ,1331 ,1348 ,1348 ,1345 ,1344 ,1339 ,1338 ,1336 ,1335 ,1335 ,1332 ,1335 ,1347 ,1348 ,1346 ,1312 ,1322 ,1325 ,1339 ,1348 ,1347 ,1347 ,1345 ,1343 ,1343 ,1340 ,1336 ,1335 ,1315 ,1322 ,1323 ,1324 ,1354 ,1345 ,1344 ,1345 ,1345 ,1345 ,1344 ,1341 ,1302 ,1312 ,1314 ,1340 ,1340 ,1336 ,1336 ,1366 ,1364 ,1357 ,1335 ,1348 ,1345 ,1335 ,1326 ,1288 ,1293 ,1328 ,1330 ,1339 ,1334 ,1339 ,1341 ,1340 ,1341 ,1296 ,1305 ,1337 ,1338 ,1351 ,1351 ,1348 ,1341 ,1340 ,1340 ,1339 ,1340 ,1340 ,1339 ,1336 ,1337 ,1336 ,1331 ,1329 ,1291 ,1292 ,1296 ,1305 ,1307 ,1306 ,1305 ,1306 ,1306 ,1304 ,1000]
}

vol4 = {
    "Tension_debut": 16.375,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 16.25,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [999 ,1007 ,1063 ,1099 ,1136 ,1161 ,1186 ,1229 ,1250 ,1256 ,1270 ,1284 ,1302 ,1305 ,1302 ,1298 ,1359 ,1359 ,1353 ,1352 ,1355 ,1336 ,1337 ,1334 ,1336 ,1301 ,1302 ,1306 ,1306 ,1306 ,1335 ,1336 ,1325 ,1324 ,1324 ,1335 ,1336 ,1328 ,1320 ,1322 ,1329 ,1332 ,1343 ,1328 ,1306 ,1313 ,1313 ,1314 ,1326 ,1341 ,1340 ,1313 ,1320 ,1322 ,1322 ,1325 ,1320 ,1320 ,1320 ,1319 ,1318 ,1319 ,1339 ,1341 ,1326 ,1324 ,1334 ,1336 ,1295 ,1304 ,1320 ,1352 ,1351 ,1307 ,1311 ,1311 ,1320 ,1327 ,1341 ,1332 ,1329 ,1330 ,1328 ,1328 ,1329 ,1328 ,1327 ,1327 ,1327 ,1327 ,1328 ,1333 ,1334 ,1334 ,1296 ,1287 ,1287 ,1309 ,1311 ,1347 ,1361 ,1351 ,1354 ,1354 ,1354 ,1328 ,1304 ,1306 ,1290 ,1334 ,1328 ,1324 ,1324 ,1336 ,1351 ,1320 ,1322 ,1320 ,1329 ,1333 ,1329 ,1329 ,1330 ,1330 ,1330 ,1330 ,1329 ,1329 ,1330 ,1329 ,1329 ,1329 ,1330 ,1329 ,1328 ,1329 ,1325 ,1285 ,1288 ,1302 ,1357 ,1356 ,1356 ,1356 ,1317 ,1314 ,1335 ,1351 ,1351 ,1345 ,1343 ,1343 ,1345 ,1342 ,1334 ,1329 ,1287 ,1287 ,1286 ,1286 ,1286 ,1287 ,1279 ,999]
}

vol5 = {
    "Tension_debut": 16.25,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 15.921,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [995 ,1004 ,1004 ,1004 ,1004 ,1004 ,1004 ,1004 ,1000 ,1000 ,1000 ,1009 ,1009 ,1032 ,1046 ,1111 ,1163 ,1176 ,1228 ,1250 ,1258 ,1282 ,1311 ,1304 ,1320 ,1318 ,1317 ,1330 ,1347 ,1336 ,1311 ,1353 ,1351 ,1299 ,1283 ,1283 ,1283 ,1285 ,1308 ,1302 ,1350 ,1347 ,1334 ,1316 ,1312 ,1315 ,1320 ,1321 ,1347 ,1342 ,1341 ,1334 ,1327 ,1335 ,1334 ,1333 ,1329 ,1317 ,1322 ,1326 ,1326 ,1325 ,1325 ,1328 ,1329 ,1330 ,1333 ,1330 ,1335 ,1320 ,1328 ,1328 ,1329 ,1332 ,1340 ,1338 ,1330 ,1330 ,1333 ,1332 ,1319 ,1304 ,1321 ,1363 ,1365 ,1293 ,1291 ,1349 ,1347 ,1338 ,1338 ,1334 ,1348 ,1329 ,1336 ,1336 ,1336 ,1336 ,1331 ,1333 ,1338 ,1338 ,1342 ,1337 ,1320 ,1321 ,1321 ,1321 ,1322 ,1320 ,1327 ,1361 ,1353 ,1352 ,1338 ,1345 ,1345 ,1338 ,1331 ,1330 ,1309 ,1309 ,1319 ,1320 ,1331 ,1338 ,1353 ,1341 ,1332 ,1343 ,1342 ,1336 ,1295 ,1313 ,1308 ,1321 ,1338 ,1335 ,1328 ,1326 ,1354 ,1359 ,1362 ,1364 ,1363 ,1366 ,1367 ,1369 ,1365 ,1362 ,1333 ,1313 ,1324 ,1324 ,1330 ,1335 ,1329 ,1323 ,1324 ,1326 ,1344 ,1356 ,1354 ,1342 ,1331 ,1335 ,1351 ,1347 ,1336 ,1338 ,1354 ,1345 ,1351 ,1347 ,1337 ,1337 ,1346 ,1353 ,1347 ,1337 ,1336 ,1336 ,1344 ,1338 ,1343 ,1340 ,1335 ,1331 ,1336 ,1352 ,1349 ,1336 ,1358 ,1356 ,1354 ,1344 ,1343 ,1344 ,1353 ,1348 ,1340 ,1338 ,1344 ,1344 ,1344 ,1344 ,1339 ,1351 ,1355 ,1354 ,1353 ,1349 ,1339 ,1344 ,1342 ,1342 ,1340 ,1343 ,1348 ,1349 ,1350 ,1348 ,1343 ,1343 ,1343 ,1344 ,1354 ,1353 ,1354 ,1353 ,1353 ,1354 ,1350 ,1349 ,1354 ,1354 ,1354 ,1350 ,1343 ,1338 ,1349 ,1351 ,1353 ,1352 ,1353 ,1353 ,1349 ,1353 ,1353 ,1353 ,1353 ,1353 ,1353 ,1352 ,1341 ,1341 ,1340 ,1338 ,1340 ,1354 ,1361 ,1354 ,1352 ,1353 ,1358 ,1358 ,1360 ,1360 ,1360 ,1359 ,1354 ,1347 ,1348 ,1344 ,1333 ,1358 ,1352 ,1336 ,1347 ,1344 ,1344 ,1342 ,1344 ,1344 ,1348 ,1357 ,1353 ,1347 ,1347 ,1357 ,1358 ,1357 ,1344 ,1343 ,1342 ,1344 ,1345 ,1345 ,1350 ,1361 ,1357 ,1348 ,1347 ,1358 ,1357 ,1344 ,1335 ,1338 ,1351 ,1357 ,1351 ,1339 ,1339 ,1353 ,1353 ,1346 ,1344 ,1353 ,1353 ,1351 ,1317 ,1317 ,1315 ,1319 ,1325 ,1325 ,1325 ,1353 ,1356 ,1302 ,1000 ]
}

vol6 = {
    "Tension_debut": 15.921,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 15.732,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [999 ,1031 ,1071 ,1099 ,1174 ,1182 ,1235 ,1244 ,1270 ,1278 ,1310 ,1328 ,1364 ,1359 ,1361 ,1338 ,1326 ,1329 ,1334 ,1332 ,1323 ,1318 ,1325 ,1390 ,1370 ,1324 ,1309 ,1316 ,1333 ,1335 ,1334 ,1336 ,1345 ,1354 ,1346 ,1352 ,1354 ,1357 ,1356 ,1352 ,1334 ,1329 ,1316 ,1315 ,1315 ,1314 ,1320 ,1343 ,1362 ,1364 ,1360 ,1352 ,1333 ,1332 ,1343 ,1344 ,1333 ,1340 ,1356 ,1346 ,1343 ,1356 ,1356 ,1359 ,1359 ,1357 ,1353 ,1345 ,1302 ,1356 ,1355 ,1363 ,1368 ,1352 ,1352 ,1351 ,1347 ,1320 ,1332 ,1359 ,1358 ,1349 ,1339 ,1345 ,1346 ,1346 ,1346 ,1346 ,1346 ,1351 ,1359 ,1357 ,1358 ,1353 ,1351 ,1350 ,1350 ,1350 ,1341 ,1342 ,1342 ,1342 ,1343 ,1344 ,1343 ,1347 ,1352 ,1355 ,1357 ,1356 ,1346 ,1343 ,1343 ,1344 ,1343 ,1343 ,1342 ,1342 ,1341 ,1342 ,1342 ,1342 ,1342 ,1343 ,1345 ,1359 ,1361 ,1361 ,1348 ,1346 ,1335 ,1353 ,1365 ,1368 ,1353 ,1354 ,1354 ,1360 ,1360 ,1360 ,1360 ,1359 ,1354 ,1349 ,1350 ,1349 ,1348 ,1350 ,1350 ,1354 ,1360 ,1353 ,1351 ,1352 ,1357 ,1358 ,1357 ,1357 ,1357 ,1358 ,1358 ,1358 ,1357 ,1358 ,1358 ,1358 ,1358 ,1358 ,1358 ,1357 ,1357 ,1358 ,1356 ,1355 ,1355 ,1355 ,1355 ,1355 ,1355 ,1352 ,1350 ,1342 ,1338 ,1340 ,1347 ,1351 ,1354 ,1354 ,1342 ,1337 ,1336 ,1333 ,1332 ,1332 ,1332 ,1338 ,1344 ,1359 ,1359 ,1359 ,1352 ,1352 ,1352 ,1351 ,1350 ,1350 ,1350 ,1351 ,1351 ,1354 ,1354 ,1354 ,1354 ,1353 ,1354 ,1354 ,1355 ,1354 ,1355 ,1355 ,1355 ,1355 ,1356 ,1356 ,1356 ,1355 ,1360 ,1360 ,1367 ,1363 ,1361 ,1361 ,1362 ,1361 ,1355 ,1355 ,1356 ,1358 ,1356 ,1357 ,1356 ,1356 ,1356 ,1355 ,1350 ,1350 ,1350 ,1350 ,1351 ,1351 ,1352 ,1352 ,1352 ,1352 ,1352 ,1352 ,1352 ,1353 ,1352 ,1352 ,1353 ,1353 ,1354 ,1355 ,1355 ,1355 ,1350 ,1349 ,1352 ,1356 ,1359 ,1358 ,1358 ,1353 ,1352 ,1351 ,1351 ,1351 ,1351 ,1351 ,1351 ,1355 ,1355 ,1354 ,1354 ,1354 ,1354 ,1354 ,1355 ,1354 ,1355 ,1355 ,1355 ,1354 ,1354 ,1354 ,1355 ,1355 ,1356 ,1359 ,1360 ,1359 ,1359 ,1359 ,1357 ,1359 ,1358 ,1358 ,1359 ,1359 ,1359 ,1363 ,1367 ,1368 ,1366 ,1365 ,1356 ,1356 ,1356 ,1360 ,1361 ,1361 ,1361 ,1361 ,1360 ,1360 ,1360 ,1360 ,1360 ,1360 ,1361 ,1363 ,1364 ,1363 ,1356 ,1359 ,1360 ,1361 ,1360 ,1360 ,1361 ,1362 ,1361 ,1362 ,1361 ,1361 ,1361 ,1362 ,1361 ,1361 ,1347 ,1334 ,1337 ,1360 ,1364 ,1361 ,1362 ,1361 ,1364 ,1367 ,1365 ,1362 ,1360 ,1358 ,1359 ,1358 ,1361 ,1367 ,1368 ,1361 ,1354 ,1354 ,1353 ,1354 ,1353 ,1354 ,1355 ,1355 ,1355 ,1355 ,1355 ,1355 ,1355 ,1355 ,1355 ,1356 ,1355 ,1355 ,1354 ,1354 ,1354 ,1356 ,1355 ,1355 ,1355 ,1355 ,1356 ,1356 ,1355 ,1360 ,1360 ,1359 ,1359 ,1359 ,1347 ,1329 ,1356 ,1354 ,1355 ,1355 ,1352 ,1345 ,1342 ,1340 ,1337 ,1337 ,1337 ,1339 ,1338 ,1338 ,1000]
}

vol7 = {
    "Tension_debut": 15.732,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 15.475,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [1000 ,1054 ,1111 ,1141 ,1164 ,1165 ,1169 ,1177 ,1178 ,1178 ,1177 ,1217 ,1241 ,1255 ,1270 ,1280 ,1290 ,1297 ,1311 ,1313 ,1317 ,1332 ,1361 ,1361 ,1361 ,1359 ,1353 ,1351 ,1351 ,1344 ,1351 ,1352 ,1351 ,1351 ,1351 ,1351 ,1351 ,1352 ,1352 ,1354 ,1351 ,1351 ,1297 ,1321 ,1343 ,1376 ,1369 ,1366 ,1370 ,1368 ,1356 ,1343 ,1349 ,1354 ,1337 ,1330 ,1342 ,1341 ,1352 ,1356 ,1352 ,1349 ,1347 ,1343 ,1364 ,1358 ,1352 ,1349 ,1356 ,1356 ,1333 ,1331 ,1335 ,1357 ,1346 ,1344 ,1365 ,1363 ,1360 ,1354 ,1353 ,1353 ,1353 ,1348 ,1355 ,1356 ,1354 ,1352 ,1348 ,1348 ,1348 ,1347 ,1347 ,1356 ,1360 ,1358 ,1349 ,1348 ,1348 ,1349 ,1349 ,1349 ,1356 ,1358 ,1342 ,1338 ,1342 ,1345 ,1348 ,1348 ,1353 ,1354 ,1355 ,1360 ,1366 ,1366 ,1366 ,1365 ,1358 ,1357 ,1367 ,1359 ,1358 ,1357 ,1357 ,1356 ,1358 ,1362 ,1356 ,1345 ,1343 ,1343 ,1343 ,1343 ,1344 ,1347 ,1348 ,1347 ,1348 ,1353 ,1357 ,1356 ,1354 ,1352 ,1347 ,1345 ,1343 ,1356 ,1356 ,1356 ,1361 ,1357 ,1358 ,1361 ,1357 ,1358 ,1359 ,1361 ,1343 ,1351 ,1360 ,1358 ,1358 ,1357 ,1357 ,1358 ,1358 ,1358 ,1357 ,1358 ,1356 ,1356 ,1356 ,1356 ,1356 ,1357 ,1362 ,1364 ,1357 ,1360 ,1361 ,1361 ,1362 ,1361 ,1356 ,1357 ,1357 ,1357 ,1357 ,1357 ,1360 ,1361 ,1361 ,1362 ,1364 ,1363 ,1365 ,1365 ,1368 ,1368 ,1367 ,1367 ,1367 ,1365 ,1365 ,1363 ,1363 ,1362 ,1361 ,1360 ,1361 ,1361 ,1361 ,1359 ,1357 ,1356 ,1356 ,1356 ,1356 ,1355 ,1355 ,1365 ,1367 ,1373 ,1365 ,1366 ,1371 ,1380 ,1372 ,1363 ,1364 ,1369 ,1369 ,1370 ,1371 ,1371 ,1363 ,1361 ,1361 ,1360 ,1355 ,1362 ,1358 ,1356 ,1357 ,1357 ,1356 ,1356 ,1356 ,1356 ,1357 ,1357 ,1358 ,1365 ,1368 ,1362 ,1359 ,1361 ,1348 ,1343 ,1345 ,1347 ,1347 ,1347 ,1349 ,1354 ,1355 ,1355 ,1354 ,1353 ,1349 ,1345 ,1343 ,1342 ,1343 ,1344 ,1356 ,1365 ,1358 ,1356 ,1357 ,1356 ,1356 ,1364 ,1373 ,1365 ,1364 ,1362 ,1366 ,1366 ,1365 ,1362 ,1362 ,1362 ,1362 ,1355 ,1339 ,1339 ,1351 ,1352 ,1352 ,1352 ,1352 ,1352 ,1349 ,1349 ,1349 ,1356 ,1362 ,1360 ,1360 ,1361 ,1363 ,1370 ,1367 ,1367 ,1367 ,1367 ,1372 ,1379 ,1376 ,1371 ,1366 ,1365 ,1353 ,1351 ,1360 ,1360 ,1358 ,1365 ,1366 ,1357 ,1357 ,1361 ,1362 ,1360 ,1363 ,1366 ,1367 ,1370 ,1370 ,1370 ,1369 ,1370 ,1347 ,1344 ,1357 ,1364 ,1363 ,1363 ,1361 ,1361 ,1360 ,1361 ,1363 ,1366 ,1367 ,1366 ,1366 ,1367 ,1367 ,1368 ,1375 ,1379 ,1367 ,1364 ,1364 ,1365 ,1366 ,1357 ,1361 ,1362 ,1362 ,1362 ,1362 ,1362 ,1348 ,1358 ,1364 ,1354 ,1353 ,1352 ,1351 ,1351 ,1360 ,1362 ,1363 ,1363 ,1368 ,1367 ,1367 ,1367 ,1367 ,1364 ,1365 ,1361 ,1362 ,1362 ,1378 ,1376 ,1375 ,1371 ,1363 ,1363 ,1356 ,1342 ,1341 ,1353 ,1354 ,1357 ,1367 ,1368 ,1369 ,1362 ,1366 ,1367 ,1369 ,1376 ,1379 ,1379 ,1379 ,1378 ,1388 ,1398 ,1396 ,1396 ,1385 ,1369 ,1378 ,1375 ,1370 ,1363 ,1363 ,1361 ,1360 ,1362 ,1369 ,1374 ,1371 ,1367 ,1361 ,1360 ,1369 ,1370 ,1369 ,1372 ,1376 ,1375 ,1374 ,1368 ,1365 ,1366 ,1356 ,1355 ,1357 ,1357 ,1359 ,1363 ,1368 ,1372 ,1382 ,1381 ,1361 ,1367 ,1369 ,1371 ,1374 ,1372 ,1364 ,1365 ,1364 ,1365 ,1363 ,1363 ,1364 ,1364 ,1365 ,1364 ,1365 ,1349 ,1353 ,1360 ,1362 ,1371 ,1372 ,1373 ,1373 ,1366 ,1364 ,1365 ,1370 ,1372 ,1372 ,1375 ,1366 ,1366 ,1365 ,1357 ,1354 ,1356 ,1356 ,1357 ,1361 ,1363 ,1361 ,1362 ,1363 ,1366 ,1364 ,1365 ,1363 ,1359 ,1357 ,1357 ,1363 ,1365 ,1365 ,1364 ,1364 ,1365 ,1353 ,1356 ,1363 ,1363 ,1363 ,1364 ,1366 ,1362 ,1362 ,1362 ,1363 ,1362 ,1358 ,1353 ,1348 ,1345 ,1345 ,1344 ,1345 ,1344 ,1345 ,1344 ,1345 ,1344 ,1344 ,1342 ,1342 ,1292 ,1000]
}

vol8 = {
    "Tension_debut": 15.475,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 15.12,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [999 ,999 ,1016 ,1072 ,1097 ,1148 ,1166 ,1169 ,1193 ,1207 ,1239 ,1265 ,1286 ,1292 ,1310 ,1318 ,1336 ,1350 ,1355 ,1350 ,1351 ,1351 ,1350 ,1351 ,1350 ,1351 ,1351 ,1351 ,1356 ,1358 ,1363 ,1385 ,1373 ,1370 ,1372 ,1372 ,1355 ,1354 ,1355 ,1356 ,1351 ,1347 ,1352 ,1357 ,1356 ,1358 ,1350 ,1349 ,1347 ,1347 ,1360 ,1361 ,1360 ,1360 ,1360 ,1359 ,1354 ,1361 ,1364 ,1358 ,1356 ,1358 ,1359 ,1364 ,1383 ,1383 ,1383 ,1374 ,1368 ,1354 ,1359 ,1359 ,1358 ,1358 ,1358 ,1360 ,1360 ,1360 ,1359 ,1358 ,1361 ,1360 ,1360 ,1356 ,1354 ,1354 ,1353 ,1354 ,1353 ,1354 ,1354 ,1354 ,1360 ,1364 ,1358 ,1356 ,1360 ,1360 ,1360 ,1360 ,1360 ,1356 ,1337 ,1351 ,1359 ,1361 ,1360 ,1359 ,1349 ,1349 ,1354 ,1360 ,1360 ,1360 ,1360 ,1359 ,1360 ,1357 ,1352 ,1350 ,1350 ,1350 ,1351 ,1352 ,1356 ,1359 ,1359 ,1360 ,1360 ,1359 ,1354 ,1354 ,1350 ,1351 ,1354 ,1363 ,1364 ,1368 ,1373 ,1380 ,1381 ,1380 ,1380 ,1372 ,1365 ,1368 ,1369 ,1363 ,1361 ,1363 ,1363 ,1356 ,1347 ,1347 ,1355 ,1355 ,1354 ,1355 ,1355 ,1359 ,1367 ,1370 ,1378 ,1381 ,1381 ,1369 ,1370 ,1370 ,1373 ,1373 ,1378 ,1378 ,1372 ,1368 ,1369 ,1364 ,1365 ,1364 ,1358 ,1364 ,1364 ,1369 ,1368 ,1365 ,1365 ,1366 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1365 ,1365 ,1364 ,1364 ,1364 ,1364 ,1364 ,1364 ,1364 ,1366 ,1365 ,1365 ,1366 ,1366 ,1365 ,1365 ,1365 ,1365 ,1365 ,1368 ,1369 ,1369 ,1369 ,1370 ,1386 ,1376 ,1376 ,1376 ,1375 ,1375 ,1368 ,1361 ,1356 ,1356 ,1359 ,1358 ,1367 ,1375 ,1378 ,1413 ,1379 ,1367 ,1367 ,1367 ,1375 ,1375 ,1375 ,1365 ,1356 ,1358 ,1359 ,1359 ,1358 ,1358 ,1358 ,1358 ,1360 ,1360 ,1361 ,1361 ,1361 ,1363 ,1363 ,1364 ,1364 ,1363 ,1364 ,1363 ,1365 ,1364 ,1367 ,1365 ,1364 ,1377 ,1380 ,1360 ,1361 ,1363 ,1365 ,1373 ,1373 ,1368 ,1373 ,1368 ,1367 ,1360 ,1361 ,1372 ,1360 ,1361 ,1362 ,1372 ,1371 ,1364 ,1361 ,1361 ,1361 ,1361 ,1361 ,1363 ,1362 ,1371 ,1371 ,1364 ,1360 ,1365 ,1371 ,1362 ,1360 ,1360 ,1361 ,1365 ,1365 ,1365 ,1365 ,1365 ,1365 ,1364 ,1370 ,1370 ,1370 ,1371 ,1372 ,1371 ,1363 ,1363 ,1363 ,1363 ,1370 ,1361 ,1363 ,1363 ,1363 ,1363 ,1374 ,1376 ,1387 ,1383 ,1379 ,1379 ,1379 ,1376 ,1375 ,1375 ,1376 ,1368 ,1364 ,1376 ,1369 ,1369 ,1369 ,1368 ,1371 ,1371 ,1372 ,1374 ,1370 ,1372 ,1368 ,1368 ,1368 ,1368 ,1368 ,1368 ,1368 ,1362 ,1358 ,1358 ,1367 ,1372 ,1372 ,1367 ,1368 ,1368 ,1368 ,1368 ,1371 ,1399 ,1397 ,1383 ,1378 ,1368 ,1368 ,1368 ,1370 ,1370 ,1372 ,1371 ,1355 ,1367 ,1372 ,1374 ,1372 ,1368 ,1367 ,1361 ,1360 ,1359 ,1360 ,1360 ,1382 ,1370 ,1358 ,1366 ,1371 ,1370 ,1370 ,1354 ,1354 ,1361 ,1367 ,1368 ,1366 ,1366 ,1373 ,1375 ,1375 ,1374 ,1374 ,1372 ,1372 ,1371 ,1371 ,1370 ,1375 ,1375 ,1375 ,1372 ,1371 ,1366 ,1366 ,1366 ,1366 ,1365 ,1366 ,1365 ,1366 ,1366 ,1365 ,1366 ,1365 ,1365 ,1365 ,1366 ,1366 ,1365 ,1365 ,1365 ,1366 ,1366 ,1366 ,1366 ,1367 ,1367 ,1367 ,1367 ,1365 ,1366 ,1365 ,1365 ,1366 ,1365 ,1367 ,1367 ,1366 ,1367 ,1367 ,1367 ,1367 ,1368 ,1374 ,1375 ,1374 ,1374 ,1365 ,1365 ,1367 ,1372 ,1376 ,1374 ,1379 ,1388 ,1373 ,1371 ,1368 ,1369 ,1370 ,1370 ,1370 ,1371 ,1371 ,1371 ,1372 ,1372 ,1373 ,1372 ,1372 ,1372 ,1371 ,1371 ,1372 ,1372 ,1372 ,1372 ,1371 ,1371 ,1370 ,1370 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1370 ,1370 ,1371 ,1371 ,1371 ,1371 ,1371 ,1370 ,1370 ,1371 ,1371 ,1371 ,1371 ,1371 ,1370 ,1371 ,1370 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1374 ,1372 ,1376 ,1376 ,1380 ,1377 ,1373 ,1374 ,1374 ,1374 ,1374 ,1373 ,1374 ,1374 ,1374 ,1373 ,1373 ,1372 ,1374 ,1373 ,1374 ,1373 ,1373 ,1373 ,1374 ,1374 ,1374 ,1373 ,1373 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1373 ,1374 ,1372 ,1374 ,1372 ,1372 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1373 ,1374 ,1373 ,1374 ,1374 ,1373 ,1374 ,1374 ,1374 ,1372 ,1372 ,1372 ,1374 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1372 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1368 ,1370 ,1368 ,1368 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1369 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1370 ,1369 ,1369 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1369 ,1369 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1370 ,1369 ,1369 ,1370 ,1369 ,1370 ,1369 ,1370 ,1370 ,1370 ,1369 ,1369 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1370 ,1369 ,1369 ,1370 ,1370 ,1369 ,1370 ,1370 ,1371 ,1371 ,1370 ,1412 ,1401 ,1399 ,1402 ,1402 ,1402 ,1398 ,1340 ,1302 ,1306 ,1345 ,1366 ,1358 ,1357 ,1356 ,1361 ,1383 ,1383 ,1375 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1373 ,1374 ,1374 ,1373 ,1373 ,1373 ,1373 ,1374 ,1373 ,1374 ,1374 ,1374 ,1374 ,1374 ,1373 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1393 ,1370 ,1370 ,1370 ,1372 ,1371 ,1375 ,1372 ,1372 ,1372 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1373 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1372 ,1373 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1372 ,1372 ,1373 ,1371 ,1368 ,1368 ,1368 ,1370 ,1370 ,1370 ,1368 ,1358 ,1365 ,1365 ,1369 ,1377 ,1371 ,1371 ,1371 ,1367 ,1367 ,1366 ,1367 ,1367 ,1367 ,1367 ,1368 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1368 ,1368 ,1374 ,1392 ,1388 ,1374 ,1376 ,1376 ,1376 ,1377 ,1377 ,1377 ,1378 ,1377 ,1378 ,1377 ,1377 ,1377 ,1377 ,1377 ,1377 ,1377 ,1378 ,1378 ,1379 ,1379 ,1380 ,1388 ,1389 ,1389 ,1385 ,1380 ,1377 ,1377 ,1376 ,1353 ,1356 ,1356 ,1360 ,1366 ,1364 ,1362 ,1363 ,1361 ,1359 ,1353 ,1346 ,1335 ,1341 ,1348 ,1362 ,1372 ,1368 ,1359 ,1359 ,1362 ,1377 ,1379 ,1376 ,1373 ,1372 ,1377 ,1379 ,1371 ,1371 ,1372 ,1374 ,1385 ,1383 ,1383 ,1375 ,1375 ,1375 ,1370 ,1371 ,1371 ,1372 ,1372 ,1372 ,1371 ,1371 ,1371 ,1371 ,1371 ,1372 ,1372 ,1372 ,1371 ,1371 ,1403 ,1391 ,1380 ,1384 ,1385 ,1381 ,1364 ,1370 ,1389 ,1380 ,1375 ,1367 ,1370 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1372 ,1372 ,1375 ,1374 ,1374 ,1374 ,1374 ,1373 ,1374 ,1379 ,1377 ,1379 ,1377 ,1378 ,1377 ,1377 ,1377 ,1377 ,1376 ,1376 ,1376 ,1376 ,1376 ,1375 ,1375 ,1375 ,1375 ,1376 ,1376 ,1376 ,1376 ,1376 ,1376 ,1376 ,1375 ,1376 ,1376 ,1376 ,1376 ,1375 ,1376 ,1376 ,1376 ,1376 ,1376 ,1375 ,1375 ,1375 ,1367 ,1367 ,1367 ,1365 ,1362 ,1354 ,1368 ,1374 ,1374 ,1371 ,1371 ,1372 ,1372 ,1375 ,1375 ,1374 ,1374 ,1376 ,1374 ,1374 ,1374 ,1370 ,1370 ,1367 ,1366 ,1366 ,1365 ,1365 ,1365 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1367 ,1368 ,1381 ,1394 ,1391 ,1386 ,1379 ,1383 ,1389 ,1389 ,1389 ,1387 ,1384 ,1384 ,1380 ,1377 ,1380 ,1380 ,1381 ,1380 ,1375 ,1378 ,1379 ,1380 ,1381 ,1381 ,1376 ,1376 ,1379 ,1380 ,1380 ,1377 ,1378 ,1379 ,1378 ,1378 ,1378 ,1368 ,1368 ,1368 ,1369 ,1369 ,1370 ,1368 ,1367 ,1367 ,1368 ,1368 ,1367 ,1368 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1369 ,1370 ,1372 ,1376 ,1379 ,1386 ,1385 ,1372 ,1377 ,1382 ,1378 ,1379 ,1379 ,1380 ,1387 ,1382 ,1411 ,1407 ,1375 ,1374 ,1374 ,1372 ,1358 ,1362 ,1371 ,1375 ,1368 ,1367 ,1370 ,1381 ,1383 ,1384 ,1380 ,1375 ,1374 ,1383 ,1384 ,1390 ,1381 ,1380 ,1379 ,1379 ,1379 ,1380 ,1381 ,1381 ,1381 ,1380 ,1380 ,1380 ,1381 ,1381 ,1381 ,1381 ,1380 ,1380 ,1380 ,1381 ,1381 ,1380 ,1380 ,1380 ,1381 ,1381 ,1381 ,1380 ,1380 ,1380 ,1374 ,1370 ,1353 ,1368 ,1368 ,1368 ,1365 ,1363 ,1373 ,1382 ,1386 ,1372 ,1372 ,1372 ,1381 ,1392 ,1392 ,1389 ,1373 ,1372 ,1372 ,1373 ,1392 ,1395 ,1392 ,1384 ,1386 ,1388 ,1387 ,1388 ,1390 ,1397 ,1394 ,1377 ,1380 ,1396 ,1395 ,1380 ,1371 ,1388 ,1394 ,1398 ,1398 ,1397 ,1397 ,1396 ,1397 ,1396 ,1396 ,1395 ,1388 ,1388 ,1388 ,1386 ,1382 ,1380 ,1381 ,1383 ,1370 ,1371 ,1371 ,1369 ,1370 ,1370 ,1372 ,1373 ,1376 ,1383 ,1381 ,1373 ,1363 ,1366 ,1376 ,1375 ,1376 ,1376 ,1375 ,1374 ,1375 ,1372 ,1373 ,1374 ,1383 ,1382 ,1376 ,1376 ,1376 ,1375 ,1374 ,1374 ,1375 ,1372 ,1371 ,1372 ,1372 ,1371 ,1368 ,1363 ,1357 ,1335 ,1336 ,1323 ,1303 ,1233 ,999]
}

vol9 = {
    "Tension_debut": 15.12,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 15.06,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [1000 ,1048 ,1197 ,1252 ,1259 ,1271 ,1295 ,1300 ,1308 ,1308 ,1309 ,1336 ,1346 ,1347 ,1347 ,1347 ,1353 ,1370 ,1370 ,1369 ,1370 ,1369 ,1368 ,1369 ,1368 ,1365 ,1364 ,1364 ,1373 ,1379 ,1379 ,1374 ,1367 ,1367 ,1367 ,1394 ,1405 ,1396 ,1396 ,1396 ,1394 ,1394 ,1394 ,1365 ,1372 ,1369 ,1369 ,1365 ,1361 ,1360 ,1369 ,1370 ,1366 ,1364 ,1370 ,1365 ,1365 ,1381 ,1382 ,1382 ,1386 ,1383 ,1370 ,1356 ,1358 ,1360 ,1361 ,1385 ,1379 ,1379 ,1372 ,1381 ,1380 ,1375 ,1372 ,1372 ,1372 ,1372 ,1372 ,1371 ,1372 ,1371 ,1371 ,1372 ,1373 ,1374 ,1374 ,1374 ,1375 ,1375 ,1375 ,1373 ,1370 ,1369 ,1363 ,1360 ,1363 ,1367 ,1369 ,1371 ,1368 ,1370 ,1370 ,1374 ,1374 ,1374 ,1373 ,1372 ,1372 ,1372 ,1371 ,1371 ,1371 ,1371 ,1371 ,1371 ,1370 ,1364 ,1363 ,1365 ,1365 ,1364 ,1363 ,1363 ,1363 ,1365 ,1365 ,1381 ,1376 ,1374 ,1371 ,1369 ,1366 ,1377 ,1376 ,1374 ,1374 ,1372 ,1371 ,1371 ,1370 ,1371 ,1370 ,1371 ,1371 ,1372 ,1378 ,1379 ,1378 ,1376 ,1375 ,1372 ,1366 ,1367 ,1388 ,1384 ,1384 ,1383 ,1377 ,1373 ,1374 ,1374 ,1370 ,1375 ,1376 ,1371 ,1368 ,1363 ,1360 ,1360 ,1360 ,1366 ,1367 ,1370 ,1378 ,1387 ,1387 ,1384 ,1376 ,1370 ,1371 ,1371 ,1371 ,1371 ,1372 ,1372 ,1372 ,1372 ,1385 ,1388 ,1388 ,1379 ,1369 ,1371 ,1371 ,1371 ,1368 ,1368 ,1369 ,1374 ,1371 ,1371 ,1372 ,1392 ,1395 ,1398 ,1398 ,1399 ,1390 ,1395 ,1399 ,1399 ,1400 ,1391 ,1388 ,1383 ,1375 ,1353 ,1331 ,1317 ,1300 ,1344 ,1380 ,1436 ,1436 ,1383 ,1384 ,1376 ,1363 ,1357 ,1358 ,1408 ,1414 ,1450 ,1410 ,1299 ,1288 ,1263 ,1253 ,1198 ,1384 ,1433 ,1434 ,1437 ,1442 ,1436 ,1393 ,1370 ,1375 ,1321 ,1336 ,1404 ,1397 ,1362 ,1344 ,1350 ,1390 ,1390 ,1390 ,1389 ,1390 ,1391 ,1389 ,1404 ,1394 ,1387 ,1387 ,1388 ,1397 ,1398 ,1376 ,1375 ,1385 ,1395 ,1381 ,1374 ,1370 ,1368 ,1370 ,1371 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1380 ,1382 ,1383 ,1383 ,1384 ,1370 ,1371 ,1390 ,1397 ,1378 ,1379 ,1398 ,1399 ,1397 ,1391 ,1379 ,1376 ,1375 ,1376 ,1375 ,1374 ,1382 ,1392 ,1391 ,1383 ,1374 ,1373 ,1375 ,1375 ,1388 ,1391 ,1390 ,1389 ,1388 ,1369 ,1370 ,1370 ,1381 ,1393 ,1379 ,1365 ,1369 ,1390 ,1392 ,1398 ,1379 ,1371 ,1367 ,1375 ,1375 ,1376 ,1385 ,1388 ,1387 ,1387 ,1385 ,1385 ,1382 ,1376 ,1369 ,1367 ,1369 ,1369 ,1369 ,1368 ,1369 ,1371 ,1406 ,1368 ,1366 ,1378 ,1380 ,1376 ,1372 ,1372 ,1376 ,1385 ,1401 ,1392 ,1373 ,1374 ,1392 ,1392 ,1379 ,1370 ,1349 ,1371 ,1381 ,1369 ,1351 ,1365 ,1385 ,1385 ,1372 ,1374 ,1372 ,1392 ,1393 ,1376 ,1403 ,1391 ,1370 ,1385 ,1393 ,1381 ,1365 ,1375 ,1373 ,1380 ,1380 ,1380 ,1385 ,1378 ,1374 ,1376 ,1375 ,1376 ,1375 ,1375 ,1376 ,1377 ,1383 ,1380 ,1382 ,1384 ,1388 ,1388 ,1388 ,1388 ,1384 ,1384 ,1381 ,1378 ,1376 ,1378 ,1378 ,1378 ,1380 ,1389 ,1392 ,1390 ,1390 ,1392 ,1392 ,1390 ,1389 ,1384 ,1385 ,1383 ,1384 ,1383 ,1384 ,1384 ,1383 ,1384 ,1375 ,1373 ,1374 ,1374 ,1372 ,1372 ,1371 ,1368 ,1366 ,1356 ,1366 ,1370 ,1374 ,1378 ,1381 ,1385 ,1388 ,1376 ,1378 ,1388 ,1392 ,1376 ,1376 ,1378 ,1392 ,1393 ,1393 ,1393 ,1393 ,1393 ,1365 ,1374 ,1376 ,1386 ,1395 ,1383 ,1375 ,1374 ,1374 ,1387 ,1399 ,1398 ,1398 ,1385 ,1376 ,1375 ,1375 ,1374 ,1376 ,1382 ,1387 ,1392 ,1392 ,1380 ,1375 ,1376 ,1375 ,1374 ,1387 ,1385 ,1387 ,1387 ,1387 ,1375 ,1375 ,1376 ,1382 ,1387 ,1388 ,1381 ,1378 ,1373 ,1374 ,1375 ,1382 ,1383 ,1383 ,1382 ,1379 ,1378 ,1378 ,1377 ,1379 ,1376 ,1377 ,1379 ,1380 ,1385 ,1391 ,1390 ,1381 ,1379 ,1383 ,1385 ,1387 ,1393 ,1394 ,1381 ,1376 ,1378 ,1387 ,1380 ,1367 ,1362 ,1359 ,1366 ,1369 ,1374 ,1375 ,1374 ,1374 ,1370 ,1364 ,1362 ,1357 ,1305 ,1073 ,1000]
}

vol10 = {
    "Tension_debut": 15.06,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 14.84,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [1000 ,1000 ,1007 ,1068 ,1113 ,1126 ,1144 ,1156 ,1161 ,1233 ,1248 ,1269 ,1289 ,1293 ,1309 ,1329 ,1336 ,1337 ,1367 ,1372 ,1372 ,1369 ,1369 ,1370 ,1370 ,1370 ,1369 ,1370 ,1370 ,1370 ,1370 ,1364 ,1364 ,1370 ,1370 ,1374 ,1373 ,1372 ,1372 ,1372 ,1386 ,1379 ,1378 ,1379 ,1376 ,1373 ,1378 ,1385 ,1386 ,1380 ,1377 ,1374 ,1374 ,1372 ,1373 ,1373 ,1374 ,1378 ,1378 ,1377 ,1374 ,1375 ,1373 ,1374 ,1374 ,1372 ,1372 ,1368 ,1361 ,1364 ,1365 ,1374 ,1372 ,1369 ,1374 ,1384 ,1384 ,1383 ,1372 ,1371 ,1372 ,1372 ,1373 ,1385 ,1377 ,1377 ,1377 ,1377 ,1382 ,1382 ,1382 ,1384 ,1385 ,1390 ,1382 ,1382 ,1382 ,1382 ,1377 ,1373 ,1367 ,1368 ,1369 ,1367 ,1368 ,1368 ,1367 ,1372 ,1373 ,1373 ,1371 ,1373 ,1373 ,1381 ,1381 ,1376 ,1381 ,1381 ,1381 ,1385 ,1386 ,1389 ,1388 ,1389 ,1389 ,1389 ,1390 ,1390 ,1389 ,1389 ,1387 ,1388 ,1387 ,1374 ,1374 ,1374 ,1376 ,1380 ,1380 ,1381 ,1381 ,1381 ,1380 ,1380 ,1380 ,1380 ,1380 ,1380 ,1374 ,1374 ,1374 ,1374 ,1374 ,1374 ,1379 ,1379 ,1380 ,1380 ,1380 ,1380 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1378 ,1379 ,1378 ,1379 ,1379 ,1378 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1379 ,1378 ,1379 ,1379 ,1379 ,1378 ,1378 ,1379 ,1378 ,1377 ,1378 ,1378 ,1378 ,1378 ,1334 ,1341 ,1391 ,1386 ,1386 ,1385 ,1383 ,1380 ,1377 ,1379 ,1379 ,1379 ,1380 ,1380 ,1380 ,1381 ,1381 ,1380 ,1380 ,1380 ,1380 ,1381 ,1381 ,1381 ,1381 ,1380 ,1380 ,1380 ,1380 ,1380 ,1380 ,1380 ,1381 ,1381 ,1382 ,1382 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1380 ,1380 ,1381 ,1381 ,1381 ,1381 ,1384 ,1391 ,1390 ,1390 ,1391 ,1389 ,1385 ,1383 ,1383 ,1379 ,1379 ,1378 ,1380 ,1380 ,1380 ,1381 ,1381 ,1384 ,1385 ,1388 ,1388 ,1388 ,1386 ,1386 ,1385 ,1384 ,1383 ,1382 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1381 ,1380 ,1379 ,1380 ,1377 ,1376 ,1374 ,1375 ,1376 ,1377 ,1377 ,1379 ,1379 ,1380 ,1379 ,1380 ,1379 ,1379 ,1379 ,1379 ,1380 ,1380 ,1380 ,1380 ,1380 ,1379 ,1380 ,1380 ,1381 ,1387 ,1392 ,1384 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1383 ,1383 ,1385 ,1384 ,1384 ,1385 ,1385 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1385 ,1382 ,1382 ,1384 ,1384 ,1385 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1383 ,1383 ,1383 ,1379 ,1380 ,1380 ,1380 ,1381 ,1381 ,1380 ,1382 ,1382 ,1382 ,1381 ,1381 ,1379 ,1380 ,1380 ,1380 ,1379 ,1380 ,1375 ,1373 ,1372 ,1371 ,1371 ,1371 ,1377 ,1380 ,1380 ,1384 ,1384 ,1384 ,1377 ,1376 ,1376 ,1377 ,1377 ,1377 ,1377 ,1375 ,1376 ,1376 ,1376 ,1376 ,1376 ,1377 ,1377 ,1377 ,1377 ,1378 ,1387 ,1391 ,1390 ,1385 ,1383 ,1384 ,1386 ,1386 ,1385 ,1386 ,1386 ,1388 ,1388 ,1390 ,1391 ,1391 ,1389 ,1388 ,1389 ,1391 ,1390 ,1391 ,1395 ,1399 ,1395 ,1389 ,1389 ,1389 ,1389 ,1388 ,1389 ,1388 ,1389 ,1385 ,1386 ,1386 ,1385 ,1382 ,1384 ,1383 ,1388 ,1389 ,1389 ,1390 ,1389 ,1389 ,1389 ,1390 ,1389 ,1389 ,1389 ,1388 ,1390 ,1385 ,1385 ,1379 ,1377 ,1378 ,1380 ,1381 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1382 ,1383 ,1384 ,1384 ,1383 ,1383 ,1384 ,1383 ,1383 ,1384 ,1384 ,1384 ,1384 ,1384 ,1384 ,1384 ,1383 ,1383 ,1383 ,1383 ,1383 ,1382 ,1379 ,1367 ,1367 ,1367 ,1366 ,1365 ,1366 ,1372 ,1372 ,1373 ,1370 ,1371 ,1381 ,1373 ,1373 ,1373 ,1373 ,1373 ,1373 ,1374 ,1372 ,1372 ,1372 ,1372 ,1372 ,1372 ,1373 ,1373 ,1375 ,1381 ,1382 ,1376 ,1375 ,1375 ,1374 ,1374 ,1374 ,1374 ,1375 ,1376 ,1376 ,1377 ,1378 ,1379 ,1379 ,1384 ,1388 ,1386 ,1382 ,1381 ,1383 ,1382 ,1382 ,1389 ,1383 ,1382 ,1383 ,1386 ,1393 ,1394 ,1393 ,1385 ,1385 ,1385 ,1385 ,1385 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1385 ,1385 ,1385 ,1385 ,1385 ,1385 ,1386 ,1386 ,1386 ,1386 ,1385 ,1385 ,1385 ,1386 ,1385 ,1385 ,1385 ,1385 ,1385 ,1385 ,1386 ,1386 ,1377 ,1375 ,1375 ,1381 ,1389 ,1390 ,1391 ,1390 ,1391 ,1392 ,1393 ,1391 ,1391 ,1387 ,1386 ,1383 ,1380 ,1381 ,1380 ,1380 ,1380 ,1380 ,1380 ,1380 ,1381 ,1381 ,1385 ,1395 ,1389 ,1384 ,1383 ,1384 ,1384 ,1384 ,1384 ,1384 ,1385 ,1385 ,1385 ,1382 ,1381 ,1380 ,1381 ,1381 ,1381 ,1381 ,1380 ,1380 ,1381 ,1381 ,1381 ,1382 ,1384 ,1384 ,1384 ,1382 ,1400 ,1399 ,1398 ,1384 ,1384 ,1386 ,1385 ,1385 ,1385 ,1385 ,1386 ,1389 ,1390 ,1389 ,1389 ,1384 ,1384 ,1389 ,1389 ,1390 ,1390 ,1390 ,1390 ,1387 ,1388 ,1382 ,1380 ,1381 ,1381 ,1380 ,1382 ,1382 ,1386 ,1386 ,1387 ,1385 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1386 ,1388 ,1388 ,1388 ,1387 ,1388 ,1387 ,1387 ,1388 ,1387 ,1388 ,1390 ,1391 ,1391 ,1391 ,1391 ,1391 ,1391 ,1391 ,1391 ,1392 ,1391 ,1399 ,1399 ,1391 ,1385 ,1385 ,1386 ,1385 ,1384 ,1381 ,1381 ,1381 ,1387 ,1396 ,1395 ,1389 ,1376 ,1379 ,1375 ,1375 ,1371 ,1373 ,1377 ,1386 ,1386 ,1388 ,1403 ,1402 ,1399 ,1393 ,1390 ,1386 ,1385 ,1386 ,1385 ,1385 ,1385 ,1385 ,1386 ,1387 ,1388 ,1388 ,1387 ,1388 ,1388 ,1373 ,1373 ,1373 ,1385 ,1385 ,1382 ,1390 ,1386 ,1382 ,1381 ,1382 ,1383 ,1385 ,1386 ,1386 ,1390 ,1393 ,1393 ,1391 ,1390 ,1390 ,1390 ,1390 ,1390 ,1391 ,1391 ,1390 ,1391 ,1390 ,1390 ,1390 ,1389 ,1385 ,1382 ,1381 ,1382 ,1389 ,1391 ,1390 ,1386 ,1386 ,1385 ,1385 ,1383 ,1399 ,1389 ,1379 ,1382 ,1384 ,1389 ,1390 ,1393 ,1398 ,1396 ,1399 ,1397 ,1396 ,1394 ,1392 ,1391 ,1387 ,1388 ,1390 ,1394 ,1393 ,1392 ,1393 ,1392 ,1393 ,1385 ,1384 ,1394 ,1398 ,1400 ,1399 ,1399 ,1398 ,1399 ,1400 ,1394 ,1389 ,1389 ,1390 ,1390 ,1391 ,1390 ,1390 ,1391 ,1390 ,1390 ,1390 ,1390 ,1391 ,1391 ,1391 ,1391 ,1390 ,1391 ,1391 ,1390 ,1390 ,1390 ,1390 ,1391 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1391 ,1391 ,1391 ,1391 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1391 ,1391 ,1391 ,1391 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1390 ,1389 ,1390 ,1389 ,1384 ,1376 ,1375 ,1389 ,1391 ,1393 ,1386 ,1386 ,1386 ,1387 ,1390 ,1394 ,1398 ,1404 ,1401 ,1391 ,1391 ,1389 ,1389 ,1388 ,1386 ,1383 ,1384 ,1386 ,1388 ,1387 ,1387 ,1387 ,1388 ,1388 ,1387 ,1389 ,1389 ,1389 ,1389 ,1389 ,1390 ,1389 ,1390 ,1390 ,1390 ,1390 ,1391 ,1391 ,1390 ,1390 ,1389 ,1388 ,1385 ,1384 ,1379 ,1375 ,1372 ,1373 ,1376 ,1376 ,1392 ,1396 ,1391 ,1388 ,1379 ,1378 ,1379 ,1379 ,1379 ,1380 ,1381 ,1381 ,1381 ,1381 ,1380 ,1380 ,1399 ,1397 ,1390 ,1385 ,1386 ,1384 ,1385 ,1385 ,1385 ,1386 ,1386 ,1384 ,1385 ,1385 ,1385 ,1388 ,1398 ,1398 ,1398 ,1396 ,1394 ,1392 ,1391 ,1391 ,1391 ,1391 ,1392 ,1393 ,1393 ,1393 ,1392 ,1393 ,1392 ,1393 ,1393 ,1393 ,1392 ,1391 ,1393 ,1391 ,1392 ,1392 ,1392 ,1393 ,1393 ,1393 ,1393 ,1393 ,1393 ,1392 ,1392 ,1393 ,1394 ,1394 ,1394 ,1394 ,1394 ,1394 ,1394 ,1394 ,1393 ,1393 ,1393 ,1393 ,1394 ,1393 ,1394 ,1395 ,1395 ,1395 ,1395 ,1394 ,1393 ,1394 ,1394 ,1394 ,1394 ,1393 ,1394 ,1393 ,1393 ,1393 ,1394 ,1000 ,1000]
}

vol11 = {
    "Tension_debut": 14.84,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 14.660,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [1000 ,999 ,1021 ,1072 ,1072 ,1112 ,1160 ,1191 ,1282 ,1313 ,1335 ,1358 ,1364 ,1363 ,1363 ,1363 ,1364 ,1364 ,1364 ,1364 ,1364 ,1364 ,1363 ,1372 ,1385 ,1385 ,1384 ,1384 ,1378 ,1377 ,1380 ,1380 ,1380 ,1380 ,1380 ,1380 ,1380 ,1379 ,1380 ,1380 ,1380 ,1391 ,1391 ,1391 ,1380 ,1382 ,1381 ,1380 ,1381 ,1387 ,1392 ,1391 ,1385 ,1381 ,1382 ,1383 ,1387 ,1387 ,1398 ,1398 ,1399 ,1399 ,1390 ,1389 ,1394 ,1399 ,1390 ,1389 ,1386 ,1382 ,1382 ,1376 ,1382 ,1387 ,1386 ,1386 ,1381 ,1380 ,1380 ,1381 ,1381 ,1380 ,1395 ,1392 ,1392 ,1393 ,1393 ,1390 ,1391 ,1391 ,1391 ,1383 ,1382 ,1382 ,1382 ,1382 ,1373 ,1373 ,1373 ,1373 ,1373 ,1380 ,1377 ,1377 ,1378 ,1378 ,1383 ,1383 ,1376 ,1377 ,1377 ,1377 ,1377 ,1377 ,1378 ,1379 ,1382 ,1387 ,1400 ,1392 ,1388 ,1388 ,1388 ,1389 ,1389 ,1389 ,1400 ,1400 ,1390 ,1389 ,1389 ,1392 ,1392 ,1387 ,1389 ,1390 ,1385 ,1382 ,1383 ,1385 ,1386 ,1395 ,1395 ,1393 ,1394 ,1394 ,1391 ,1390 ,1391 ,1394 ,1395 ,1396 ,1397 ,1388 ,1385 ,1383 ,1385 ,1383 ,1383 ,1384 ,1390 ,1394 ,1393 ,1381 ,1378 ,1380 ,1382 ,1387 ,1387 ,1389 ,1389 ,1390 ,1391 ,1391 ,1392 ,1396 ,1396 ,1391 ,1386 ,1382 ,1384 ,1376 ,1390 ,1391 ,1392 ,1399 ,1400 ,1395 ,1388 ,1385 ,1385 ,1386 ,1386 ,1391 ,1394 ,1394 ,1394 ,1395 ,1395 ,1395 ,1395 ,1395 ,1395 ,1395 ,1395 ,1392 ,1389 ,1373 ,1376 ,1376 ,1376 ,1377 ,1377 ,1377 ,1377 ,1386 ,1386 ,1386 ,1387 ,1387 ,1395 ,1401 ,1400 ,1398 ,1389 ,1385 ,1390 ,1417 ,1409 ,1409 ,1409 ,1405 ,1400 ,1396 ,1394 ,1392 ,1391 ,1396 ,1399 ,1399 ,1399 ,1399 ,1399 ,1400 ,1400 ,1400 ,1400 ,1399 ,1399 ,1399 ,1399 ,1400 ,1399 ,1400 ,1399 ,1399 ,1398 ,1399 ,1399 ,1399 ,1399 ,1399 ,1399 ,1400 ,1405 ,1418 ,1417 ,1410 ,1410 ,1410 ,1406 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1406 ,1406 ,1405 ,1405 ,1405 ,1407 ,1405 ,1405 ,1405 ,1406 ,1406 ,1405 ,1405 ,1405 ,1405 ,1405 ,1406 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1407 ,1405 ,1406 ,1406 ,1403 ,1399 ,1381 ,1369 ,1367 ,1367 ,1367 ,1368 ,1369 ,1368 ,1369 ,1378 ,1400 ,1399 ,1398 ,1398 ,1401 ,1415 ,1431 ,1435 ,1435 ,1435 ,1435 ,1423 ,1423 ,1423 ,1423 ,1401 ,1399 ,1399 ,1399 ,1400 ,1412 ,1409 ,1405 ,1401 ,1400 ,1400 ,1398 ,1396 ,1401 ,1400 ,1400 ,1403 ,1402 ,1403 ,1402 ,1401 ,1403 ,1403 ,1400 ,1400 ,1400 ,1405 ,1405 ,1405 ,1404 ,1405 ,1404 ,1404 ,1404 ,1404 ,1404 ,1404 ,1404 ,1404 ,1404 ,1405 ,1405 ,1405 ,1401 ,1401 ,1399 ,1398 ,1396 ,1404 ,1404 ,1404 ,1403 ,1404 ,1404 ,1403 ,1405 ,1410 ,1409 ,1407 ,1409 ,1412 ,1418 ,1405 ,1404 ,1403 ,1403 ,1403 ,1404 ,1404 ,1404 ,1404 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1405 ,1403 ,1403 ,1401 ,1407 ,1408 ,1408 ,1394 ,1394 ,1401 ,1401 ,1401 ,1399 ,1394 ,1392 ,1391 ,1390 ,1394 ,1407 ,1413 ,1416 ,1414 ,1404 ,1405 ,1405 ,1405 ,1426 ,1395 ,1395 ,1398 ,1401 ,1419 ,1425 ,1423 ,1409 ,1409 ,1409 ,1410 ,1422 ,1417 ,1415 ,1380 ,1398 ,1404 ,1409 ,1417 ,1404 ,1417 ,1405 ,1434 ,1434 ,1427 ,1425 ,1418 ,1413 ,1413 ,1423 ,1425 ,1425 ,1424 ,1424 ,1384 ,1392 ,1404 ,1405 ,1405 ,1405 ,1406 ,1406 ,1401 ,1396 ,1398 ,1399 ,1407 ,1418 ,1434 ,1428 ,1426 ,1428 ,1399 ,1404 ,1404 ,1409 ,1409 ,1407 ,1405 ,1406 ,1405 ,1406 ,1407 ,1407 ,1414 ,1407 ,1404 ,1401 ,1414 ,1416 ,1417 ,1413 ,1404 ,1405 ,1410 ,1416 ,1417 ,1416 ,1407 ,1409 ,1417 ,1436 ,1429 ,1428 ,1428 ,1409 ,1409 ,1410 ,1412 ,1414 ,1417 ,1417 ,1418 ,1418 ,1418 ,1418 ,1418 ,1419 ,1416 ,1416 ,1417 ,1414 ,1418 ,1419 ,1428 ,1426 ,1423 ,1424 ,1428 ,1427 ,1427 ,1426 ,1425 ,1425 ,1424 ,1425 ,1419 ,1413 ,1414 ,1413 ,1416 ,1414 ,1416 ,1416 ,1416 ,1413 ,1409 ,1395 ,1391 ,1383 ,1384 ,1434 ,1100 ,1000]
}

vol12 = {
    "Tension_debut": 14.660,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 14.35,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [999 ,1033 ,1072 ,1089 ,1176 ,1226 ,1269 ,1291 ,1316 ,1332 ,1360 ,1372 ,1374 ,1373 ,1375 ,1374 ,1371 ,1370 ,1370 ,1372 ,1377 ,1388 ,1387 ,1396 ,1400 ,1396 ,1396 ,1394 ,1392 ,1392 ,1391 ,1391 ,1392 ,1392 ,1392 ,1392 ,1396 ,1390 ,1391 ,1394 ,1396 ,1395 ,1392 ,1394 ,1398 ,1397 ,1397 ,1399 ,1397 ,1397 ,1399 ,1396 ,1396 ,1397 ,1400 ,1403 ,1403 ,1404 ,1404 ,1409 ,1397 ,1397 ,1399 ,1400 ,1405 ,1412 ,1413 ,1410 ,1409 ,1405 ,1405 ,1403 ,1403 ,1412 ,1415 ,1410 ,1411 ,1410 ,1412 ,1410 ,1408 ,1406 ,1405 ,1406 ,1406 ,1406 ,1408 ,1408 ,1409 ,1409 ,1408 ,1408 ,1408 ,1413 ,1414 ,1414 ,1403 ,1394 ,1394 ,1409 ,1432 ,1421 ,1419 ,1419 ,1419 ,1419 ,1421 ,1421 ,1399 ,1399 ,1401 ,1414 ,1413 ,1411 ,1397 ,1399 ,1399 ,1399 ,1412 ,1415 ,1414 ,1415 ,1421 ,1419 ,1430 ,1430 ,1431 ,1432 ,1432 ,1435 ,1431 ,1437 ,1436 ,1438 ,1431 ,1430 ,1430 ,1428 ,1428 ,1428 ,1395 ,1406 ,1427 ,1417 ,1412 ,1423 ,1433 ,1439 ,1424 ,1424 ,1433 ,1442 ,1435 ,1437 ,1436 ,1435 ,1435 ,1433 ,1427 ,1426 ,1431 ,1436 ,1439 ,1436 ,1442 ,1442 ,1441 ,1439 ,1437 ,1441 ,1446 ,1445 ,1440 ,1442 ,1444 ,1444 ,1444 ,1445 ,1446 ,1445 ,1446 ,1444 ,1440 ,1439 ,1436 ,1437 ,1435 ,1439 ,1441 ,1442 ,1442 ,1445 ,1442 ,1444 ,1446 ,1442 ,1444 ,1444 ,1446 ,1448 ,1448 ,1448 ,1449 ,1448 ,1449 ,1449 ,1449 ,1450 ,1451 ,1451 ,1450 ,1453 ,1458 ,1459 ,1460 ,1460 ,1460 ,1460 ,1463 ,1469 ,1468 ,1469 ,1468 ,1468 ,1468 ,1467 ,1460 ,1459 ,1467 ,1468 ,1469 ,1468 ,1468 ,1469 ,1469 ,1468 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1469 ,1468 ,1464 ,1461 ,1448 ,1440 ,1439 ,1439 ,1437 ,1437 ,1437 ,1432 ,1039 ,999]
}

vol13 = {
    "Tension_debut": 14.35,  # Remplacez 0.0 par la valeur initiale souhaitée
    "Tension_fin": 12.1,    # Remplacez 0.0 par la valeur finale souhaitée
    "V": [1000 ,1000 ,1002 ,1017 ,1032 ,1041 ,1044 ,1049 ,1055 ,1072 ,1107 ,1162 ,1217 ,1252 ,1269 ,1277 ,1299 ,1304 ,1326 ,1353 ,1367 ,1372 ,1382 ,1411 ,1407 ,1408 ,1408 ,1408 ,1403 ,1398 ,1400 ,1406 ,1406 ,1407 ,1406 ,1408 ,1406 ,1406 ,1405 ,1406 ,1405 ,1408 ,1411 ,1431 ,1428 ,1425 ,1421 ,1422 ,1422 ,1422 ,1418 ,1420 ,1409 ,1412 ,1417 ,1421 ,1422 ,1422 ,1420 ,1420 ,1421 ,1422 ,1421 ,1424 ,1424 ,1426 ,1426 ,1426 ,1427 ,1427 ,1427 ,1428 ,1431 ,1436 ,1436 ,1433 ,1432 ,1436 ,1446 ,1441 ,1439 ,1443 ,1444 ,1443 ,1443 ,1443 ,1444 ,1445 ,1444 ,1444 ,1445 ,1451 ,1451 ,1449 ,1452 ,1453 ,1452 ,1454 ,1454 ,1458 ,1461 ,1460 ,1460 ,1460 ,1460 ,1460 ,1461 ,1462 ,1463 ,1463 ,1462 ,1465 ,1466 ,1466 ,1471 ,1472 ,1472 ,1476 ,1492 ,1502 ,1499 ,1490 ,1480 ,1487 ,1489 ,1485 ,1485 ,1485 ,1497 ,1493 ,1494 ,1498 ,1497 ,1496 ,1496 ,1497 ,1502 ,1502 ,1505 ,1521 ,1524 ,1524 ,1525 ,1524 ,1527 ,1529 ,1552 ,1565 ,1610 ,1634 ,1625 ,1617 ,1580 ,1564 ,1564 ,1565 ,1565 ,1587 ,1598 ,1598 ,1597 ,1597 ,1636 ,1630 ,1629 ,1631 ,1629 ,1630 ,1630 ,1629 ,1629 ,1632 ,1632 ,1634 ,1635 ,1635 ,1643 ,1661 ,1668 ,1669 ,1666 ,1666 ,1664 ,1665 ,1665 ,1665 ,1665 ,1665 ,1665 ,1668 ,1666 ,1667 ,1667 ,1667 ,1668 ,1667 ,1665 ,1665 ,1892 ,1893 ,1893 ,1893 ,1893 ,1755 ,1750 ,1751 ,1753 ,1750 ,1749 ,1742 ,1762 ,1763 ,1763 ,1762 ,1762 ,1764 ,1790 ,1788 ,1790 ,1790 ,1791 ,1786 ,1790 ,1791 ,1791 ,1791 ,1791 ,1791 ,1791 ,1791 ,1814 ,1835 ,1843 ,1940 ,1975 ,1975 ,1974 ,1973 ,1974 ,1973 ,1974 ,1974 ,1974 ,1974 ,1974 ,1974 ,1974 ,1973 ,1973 ,1974 ,1974 ,1974 ,1974 ,1974 ,1974 ,1974 ,1974 ,1975 ,1975 ,1975 ,1974 ,1974 ,1975 ,1975 ,1975 ,1975 ,1975 ,1974 ,1974 ,1975 ,1974 ,1974 ,1975 ,1975 ,1974 ,1974 ,1975 ,1975 ,1975 ,1975 ,1974 ,1974 ,1974 ,1974 ,1975 ,1974 ,1975 ,1973 ,1974 ,1975 ,1975 ,1975 ,1974 ,1974 ,1976 ,1979 ,1977 ,1978 ,1978 ,1977 ,1976 ,1976 ,1975 ,1974 ,1974 ,1974 ,1974 ,1974 ,1822 ,1000 ,1000 ,1000 ,999 ,1000 ,1000 ,1000 ,1000 ,1000 ,1000 ,999 ,1000 ,999 ,999 ,999 ,999 ,999 ,999 ,1000 ,1000 ,999 ,999 ,999 ,1000 ,1000 ,1000 ,1000 ,1000 ,999 ,999 ,999 ,1000 ,999 ,999 ,999 ,999 ,1732 ,1748 ,1748 ,1862 ,1979 ,1979 ,1979 ,1465 ,1979 ,1979 ,1000]
}

vol = [vol1, vol2, vol3, vol4, vol5, vol6, vol7, vol8, vol9, vol10, vol11, vol12]

# Fonction pour identifier les phases de vol stationnaire
def identify_stationary_phases(V, threshold=10, min_length=10):
    stationary_phases = []
    start = 0

    while start < len(V):
        avg = V[start]
        end = start
        count = 0  # Compteur pour les valeurs successives
        while end < len(V) and abs(V[end] - avg) <= threshold:
            avg = (avg * count + V[end]) / (count + 1)  # Mise à jour incrémentale
            count += 1
            end += 1

        if count >= min_length:
            stationary_phases.append((start, end))
        start = end

    return stationary_phases


###########################################################################################

# Nombre de sous-graphiques
num_vols = len(vol)
cols = 4  # Nombre de colonnes
rows = (num_vols + cols - 1) // cols  # Calculer le nombre de lignes nécessaires



### Afficher toutes les courbes sur le même graphique ###
import matplotlib.pyplot as plt
import numpy as np

plt.figure(figsize=(15, 10))

# Variables pour stocker toutes les tensions et toutes les valeurs de V
all_tensions = []
all_Vs = []

# Tracer les courbes des différents vols
for i, vol_etudie in enumerate(vol):
    time_vol = list(range(len(vol_etudie["V"])))
    tension = [
        vol_etudie["Tension_debut"] + (vol_etudie["Tension_fin"] - vol_etudie["Tension_debut"]) * t / (len(vol_etudie["V"]) - 1)
        for t in time_vol
    ]
    plt.plot(tension, vol_etudie["V"], label=f'vol{i+1}')

    # Ajouter les tensions et V à la liste globale, en filtrant les valeurs de V < 1250
    filtered_tensions = [t for t, v in zip(tension, vol_etudie["V"]) if v >= 1250]
    filtered_Vs = [v for v in vol_etudie["V"] if v >= 1250]
    all_tensions.extend(filtered_tensions)
    all_Vs.extend(filtered_Vs)

# Convertir les listes en numpy arrays pour la régression
all_tensions = np.array(all_tensions)
all_Vs = np.array(all_Vs)

# Fonction pour calculer l'erreur quadratique moyenne (MSE)
def calculate_mse(y_true, y_pred):
    return np.mean((y_true - y_pred) ** 2)

# Tester différents degrés de polynôme
max_degree = 5
best_degree = 1
best_mse = float('inf')
best_poly = None

for degree in range(1, max_degree + 1):
    coefficients = np.polyfit(all_tensions, all_Vs, degree)
    polynomial = np.poly1d(coefficients)
    predicted_Vs = polynomial(all_tensions)
    mse = calculate_mse(all_Vs, predicted_Vs)
    if mse < best_mse:
        best_mse = mse
        best_degree = degree
        best_poly = polynomial

# Tracer la meilleure courbe de tendance
tensions_sorted = np.sort(all_tensions)
plt.plot(tensions_sorted, best_poly(tensions_sorted), linestyle='--', color='black', label=f'Tendance (degré {best_degree})')

# Courbes décalées à ±5 % de la courbe noire
percentage_offset = 0.02  # 5 %
upper_bound = best_poly(tensions_sorted) * (1 + percentage_offset)
lower_bound = best_poly(tensions_sorted) * (1 - percentage_offset)

plt.plot(tensions_sorted, upper_bound, linestyle='--', color='red', label='+2% de la courbe noire')
plt.plot(tensions_sorted, lower_bound, linestyle='--', color='red', label='-2% de la courbe noire')

# Filtrer les points avec V >= 1250
filtered_tensions = all_tensions[all_Vs >= 1250]
filtered_Vs = all_Vs[all_Vs >= 1250]

# Calculer le pourcentage de points entre les courbes décalées dynamiques
within_bounds_dynamic = sum(
    (lower_bound[np.where(tensions_sorted == t)[0][0]] <= v <= upper_bound[np.where(tensions_sorted == t)[0][0]])
    for t, v in zip(filtered_tensions, filtered_Vs)
)
percentage_within_bounds_dynamic = (within_bounds_dynamic / len(filtered_Vs)) * 100

# Afficher le pourcentage des points entre les bornes dynamiques en haut à gauche
plt.text(0.05, 0.85, f"{percentage_within_bounds_dynamic:.2f}% des points entre ±2 %",
         fontsize=10, color='red', transform=plt.gca().transAxes, verticalalignment='top')


# Déterminer le point correspondant à 15 minutes
time_step = 0.2  # Intervalle de temps entre les données
total_points = sum(len(vol_etudie["V"]) for vol_etudie in vol)  # Nombre total de points dans toutes les listes
points_in_15min = int(15 * 60 / time_step)  # Nombre de points en 15 minutes

if points_in_15min < total_points:
    cumulative_points = 0
    for vol_etudie in vol:
        cumulative_points += len(vol_etudie["V"])
        if cumulative_points >= points_in_15min:
            cutoff_index = points_in_15min - (cumulative_points - len(vol_etudie["V"]))
            cutoff_tension = (
                vol_etudie["Tension_debut"]
                + (vol_etudie["Tension_fin"] - vol_etudie["Tension_debut"]) * cutoff_index / (len(vol_etudie["V"]) - 1)
            )
            plt.axvline(x=cutoff_tension, color='blue', linestyle='--', label='Fin batterie (15 min)')
            break

# Afficher l'équation et le pourcentage en haut à gauche
equation = "y = " + " + ".join([f"{coef:.2e}x^{i}" for i, coef in enumerate(best_poly.coefficients[::-1])])
plt.text(0.05, 0.95, equation, fontsize=10, color='black', transform=plt.gca().transAxes, verticalalignment='top')
#plt.text(0.05, 0.90, f"{percentage_within_bounds:.2f}% des points entre ±20 PWM", fontsize=10, color='blue', transform=plt.gca().transAxes, verticalalignment='top')

# Inverser l'axe des x pour que la tension soit décroissante
plt.gca().invert_xaxis()

# Ajouter les titres et la légende
plt.title('Evolution de la consigne moteur nécessaire pour le vol stationnaire')
plt.xlabel('Tension de la batterie (en V)')
plt.ylabel('Consigne moteur PWM')
plt.legend(loc='lower right')
plt.grid(True)

plt.show()


###
##  Stocker les phases de vol stationnaire dans une liste
###
vol_stabilise = []
# Identifier les phases de vol stationnaire pour chaque vol et les stocker dans une liste
for i, vol_etudie in enumerate(vol):
    V = vol_etudie["V"]
    time = list(range(len(V)))
    tension = [vol_etudie["Tension_debut"] + (vol_etudie["Tension_fin"] - vol_etudie["Tension_debut"]) * t / (len(V) - 1) for t in time]

    # Identifier les phases de vol stationnaire sauf pour le dernier vol
    if i < len(vol) - 1:
        stationary_phases = identify_stationary_phases(V)
        for start, end in stationary_phases:
            vol_stabilise.append({
                "vol_num": i + 1,
                "time_start": start,
                "time_end": end,
                "tension_start": tension[start],
                "tension_end": tension[end-1],
                "V": V[start:end]
            })
